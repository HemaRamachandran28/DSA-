Given the arrival and departure times of all trains that reach a railway station, the task is to find the minimum number of platforms required for the railway station so that no train waits. We are given two arrays that represent the arrival and departure times of trains that stop.

Input Format

size of the array first array is arrival time elements second array is departure times elements

Constraints

Constraints: 1 ≤ n ≤ 50000
0000 ≤ A[i] ≤ D[i] ≤ 2359

Expected Time Complexity: O(nLogn) Expected Auxiliary Space: O(1)

Output Format

print the minimum platforms

Sample Input 0

6
900 940 950 1100 1500 1800
910 1200 1120 1130 1900 2000
Sample Output 0

3
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner sc = new Scanner(System.in);
        int n=sc.nextInt();
        int[] arr=new int[n];
        int[] dip=new int[n];
        int c=1;
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }   
        for(int i=0;i<n;i++){
            dip[i]=sc.nextInt();  
        }
        Arrays.sort(dip);
        int i=1;
        int j=0;
        int p=1;
        int fp=1;
        while(i<n && j<n){
            if(arr[i]>dip[j]){
                p--;
                j++;
            }
            else if(arr[i]<dip[j]){
                p++;
                i++;
            }
            fp=Math.max(fp,p);
        }
        System.out.print(fp);
        
    }
}
